{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/numeral/numeral.js","webpack:///./src/api/baseUrl.js","webpack:///./src/api/usersApi.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","e","t","__WEBPACK_AMD_DEFINE_RESULT__","numeral","languages","currentLanguage","zeroFormat","defaultFormat","hasModule","Numeral","number","this","_value","toFixed","precision","roundingFunction","optionals","optionalsRegExp","output","power","Math","pow","RegExp","replace","formatNumber","format","min","max","w","thousands","negP","signed","optDec","abbr","abbrK","abbrM","abbrB","abbrT","abbrForce","bytes","ord","abs","suffixes","neg","indexOf","slice","abbreviations","trillion","billion","million","thousand","length","ordinal","toString","split","delimiters","decimal","Number","_","b","O","multiplier","x","parts","correctionFactor","Array","arguments","reduce","prev","next","mp","mn","input","isNumeral","fn","unformat","version","obj","language","key","values","Error","languageData","currency","symbol","callback","opt_initialValue","TypeError","index","isValueSet","clone","inputString","spliceIndex","symbolIndex","openParenIndex","minusSignIndex","space","splice","join","hours","floor","minutes","seconds","round","formatNumeral","string","thousandRegExp","millionRegExp","billionRegExp","trillionRegExp","stringOriginal","bytesMultiplier","timeArray","match","ceil","unformatNumeral","valueOf","set","add","corrFactor","accum","curr","currI","subtract","multiply","divide","difference","ender","apply","url","window","location","href","results","exec","decodeURIComponent","getUsers","fetch","buildUrl","then","onSuccess","onError","deleteUser","id","request","Request","method","baseUrl","response","json","error","console","log","_usersApi","_numeral2","convertUserToHtml","user","firstName","lastName","email","users","document","querySelector","innerHTML","map","tbody","querySelectorAll","forEach","link","addEventListener","attributes","removeChild","parentNode"],"mappings":"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","file":"main.7624436322a35654fb5d.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","/*!\n * numeral.js\n * version : 1.5.3\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function () {\n\n    /************************************\n        Constants\n    ************************************/\n\n    var numeral,\n        VERSION = '1.5.3',\n        // internal storage for language config files\n        languages = {},\n        currentLanguage = 'en',\n        zeroFormat = null,\n        defaultFormat = '0,0',\n        // check for nodeJS\n        hasModule = (typeof module !== 'undefined' && module.exports);\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n\n    // Numeral prototype object\n    function Numeral (number) {\n        this._value = number;\n    }\n\n    /**\n     * Implementation of toFixed() that treats floats more like decimals\n     *\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n     * problems for accounting- and finance-related software.\n     */\n    function toFixed (value, precision, roundingFunction, optionals) {\n        var power = Math.pow(10, precision),\n            optionalsRegExp,\n            output;\n            \n        //roundingFunction = (roundingFunction !== undefined ? roundingFunction : Math.round);\n        // Multiply up by precision, round accurately, then divide and use native toFixed():\n        output = (roundingFunction(value * power) / power).toFixed(precision);\n\n        if (optionals) {\n            optionalsRegExp = new RegExp('0{1,' + optionals + '}$');\n            output = output.replace(optionalsRegExp, '');\n        }\n\n        return output;\n    }\n\n    /************************************\n        Formatting\n    ************************************/\n\n    // determine what type of formatting we need to do\n    function formatNumeral (n, format, roundingFunction) {\n        var output;\n\n        // figure out what kind of format we are dealing with\n        if (format.indexOf('$') > -1) { // currency!!!!!\n            output = formatCurrency(n, format, roundingFunction);\n        } else if (format.indexOf('%') > -1) { // percentage\n            output = formatPercentage(n, format, roundingFunction);\n        } else if (format.indexOf(':') > -1) { // time\n            output = formatTime(n, format);\n        } else { // plain ol' numbers or bytes\n            output = formatNumber(n._value, format, roundingFunction);\n        }\n\n        // return string\n        return output;\n    }\n\n    // revert to number\n    function unformatNumeral (n, string) {\n        var stringOriginal = string,\n            thousandRegExp,\n            millionRegExp,\n            billionRegExp,\n            trillionRegExp,\n            suffixes = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n            bytesMultiplier = false,\n            power;\n\n        if (string.indexOf(':') > -1) {\n            n._value = unformatTime(string);\n        } else {\n            if (string === zeroFormat) {\n                n._value = 0;\n            } else {\n                if (languages[currentLanguage].delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g,'').replace(languages[currentLanguage].delimiters.decimal, '.');\n                }\n\n                // see if abbreviations are there so that we can multiply to the correct number\n                thousandRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.thousand + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n                millionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.million + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n                billionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.billion + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n                trillionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.trillion + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n\n                // see if bytes are there so that we can multiply to the correct number\n                for (power = 0; power <= suffixes.length; power++) {\n                    bytesMultiplier = (string.indexOf(suffixes[power]) > -1) ? Math.pow(1024, power + 1) : false;\n\n                    if (bytesMultiplier) {\n                        break;\n                    }\n                }\n\n                // do some math to create our number\n                n._value = ((bytesMultiplier) ? bytesMultiplier : 1) * ((stringOriginal.match(thousandRegExp)) ? Math.pow(10, 3) : 1) * ((stringOriginal.match(millionRegExp)) ? Math.pow(10, 6) : 1) * ((stringOriginal.match(billionRegExp)) ? Math.pow(10, 9) : 1) * ((stringOriginal.match(trillionRegExp)) ? Math.pow(10, 12) : 1) * ((string.indexOf('%') > -1) ? 0.01 : 1) * (((string.split('-').length + Math.min(string.split('(').length-1, string.split(')').length-1)) % 2)? 1: -1) * Number(string.replace(/[^0-9\\.]+/g, ''));\n\n                // round if we are talking about bytes\n                n._value = (bytesMultiplier) ? Math.ceil(n._value) : n._value;\n            }\n        }\n        return n._value;\n    }\n\n    function formatCurrency (n, format, roundingFunction) {\n        var symbolIndex = format.indexOf('$'),\n            openParenIndex = format.indexOf('('),\n            minusSignIndex = format.indexOf('-'),\n            space = '',\n            spliceIndex,\n            output;\n\n        // check for space before or after currency\n        if (format.indexOf(' $') > -1) {\n            space = ' ';\n            format = format.replace(' $', '');\n        } else if (format.indexOf('$ ') > -1) {\n            space = ' ';\n            format = format.replace('$ ', '');\n        } else {\n            format = format.replace('$', '');\n        }\n\n        // format the number\n        output = formatNumber(n._value, format, roundingFunction);\n\n        // position the symbol\n        if (symbolIndex <= 1) {\n            if (output.indexOf('(') > -1 || output.indexOf('-') > -1) {\n                output = output.split('');\n                spliceIndex = 1;\n                if (symbolIndex < openParenIndex || symbolIndex < minusSignIndex){\n                    // the symbol appears before the \"(\" or \"-\"\n                    spliceIndex = 0;\n                }\n                output.splice(spliceIndex, 0, languages[currentLanguage].currency.symbol + space);\n                output = output.join('');\n            } else {\n                output = languages[currentLanguage].currency.symbol + space + output;\n            }\n        } else {\n            if (output.indexOf(')') > -1) {\n                output = output.split('');\n                output.splice(-1, 0, space + languages[currentLanguage].currency.symbol);\n                output = output.join('');\n            } else {\n                output = output + space + languages[currentLanguage].currency.symbol;\n            }\n        }\n\n        return output;\n    }\n\n    function formatPercentage (n, format, roundingFunction) {\n        var space = '',\n            output,\n            value = n._value * 100;\n\n        // check for space before %\n        if (format.indexOf(' %') > -1) {\n            space = ' ';\n            format = format.replace(' %', '');\n        } else {\n            format = format.replace('%', '');\n        }\n\n        output = formatNumber(value, format, roundingFunction);\n        \n        if (output.indexOf(')') > -1 ) {\n            output = output.split('');\n            output.splice(-1, 0, space + '%');\n            output = output.join('');\n        } else {\n            output = output + space + '%';\n        }\n\n        return output;\n    }\n\n    function formatTime (n) {\n        var hours = Math.floor(n._value/60/60),\n            minutes = Math.floor((n._value - (hours * 60 * 60))/60),\n            seconds = Math.round(n._value - (hours * 60 * 60) - (minutes * 60));\n        return hours + ':' + ((minutes < 10) ? '0' + minutes : minutes) + ':' + ((seconds < 10) ? '0' + seconds : seconds);\n    }\n\n    function unformatTime (string) {\n        var timeArray = string.split(':'),\n            seconds = 0;\n        // turn hours and minutes into seconds and add them all up\n        if (timeArray.length === 3) {\n            // hours\n            seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n            // minutes\n            seconds = seconds + (Number(timeArray[1]) * 60);\n            // seconds\n            seconds = seconds + Number(timeArray[2]);\n        } else if (timeArray.length === 2) {\n            // minutes\n            seconds = seconds + (Number(timeArray[0]) * 60);\n            // seconds\n            seconds = seconds + Number(timeArray[1]);\n        }\n        return Number(seconds);\n    }\n\n    function formatNumber (value, format, roundingFunction) {\n        var negP = false,\n            signed = false,\n            optDec = false,\n            abbr = '',\n            abbrK = false, // force abbreviation to thousands\n            abbrM = false, // force abbreviation to millions\n            abbrB = false, // force abbreviation to billions\n            abbrT = false, // force abbreviation to trillions\n            abbrForce = false, // force abbreviation\n            bytes = '',\n            ord = '',\n            abs = Math.abs(value),\n            suffixes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n            min,\n            max,\n            power,\n            w,\n            precision,\n            thousands,\n            d = '',\n            neg = false;\n\n        // check if number is zero and a custom zero format has been set\n        if (value === 0 && zeroFormat !== null) {\n            return zeroFormat;\n        } else {\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (format.indexOf('(') > -1) {\n                negP = true;\n                format = format.slice(1, -1);\n            } else if (format.indexOf('+') > -1) {\n                signed = true;\n                format = format.replace(/\\+/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (format.indexOf('a') > -1) {\n                // check if abbreviation is specified\n                abbrK = format.indexOf('aK') >= 0;\n                abbrM = format.indexOf('aM') >= 0;\n                abbrB = format.indexOf('aB') >= 0;\n                abbrT = format.indexOf('aT') >= 0;\n                abbrForce = abbrK || abbrM || abbrB || abbrT;\n\n                // check for space before abbreviation\n                if (format.indexOf(' a') > -1) {\n                    abbr = ' ';\n                    format = format.replace(' a', '');\n                } else {\n                    format = format.replace('a', '');\n                }\n\n                if (abs >= Math.pow(10, 12) && !abbrForce || abbrT) {\n                    // trillion\n                    abbr = abbr + languages[currentLanguage].abbreviations.trillion;\n                    value = value / Math.pow(10, 12);\n                } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9) && !abbrForce || abbrB) {\n                    // billion\n                    abbr = abbr + languages[currentLanguage].abbreviations.billion;\n                    value = value / Math.pow(10, 9);\n                } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6) && !abbrForce || abbrM) {\n                    // million\n                    abbr = abbr + languages[currentLanguage].abbreviations.million;\n                    value = value / Math.pow(10, 6);\n                } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3) && !abbrForce || abbrK) {\n                    // thousand\n                    abbr = abbr + languages[currentLanguage].abbreviations.thousand;\n                    value = value / Math.pow(10, 3);\n                }\n            }\n\n            // see if we are formatting bytes\n            if (format.indexOf('b') > -1) {\n                // check for space before\n                if (format.indexOf(' b') > -1) {\n                    bytes = ' ';\n                    format = format.replace(' b', '');\n                } else {\n                    format = format.replace('b', '');\n                }\n\n                for (power = 0; power <= suffixes.length; power++) {\n                    min = Math.pow(1024, power);\n                    max = Math.pow(1024, power+1);\n\n                    if (value >= min && value < max) {\n                        bytes = bytes + suffixes[power];\n                        if (min > 0) {\n                            value = value / min;\n                        }\n                        break;\n                    }\n                }\n            }\n\n            // see if ordinal is wanted\n            if (format.indexOf('o') > -1) {\n                // check for space before\n                if (format.indexOf(' o') > -1) {\n                    ord = ' ';\n                    format = format.replace(' o', '');\n                } else {\n                    format = format.replace('o', '');\n                }\n\n                ord = ord + languages[currentLanguage].ordinal(value);\n            }\n\n            if (format.indexOf('[.]') > -1) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            w = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n\n            if (precision) {\n                if (precision.indexOf('[') > -1) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    d = toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    d = toFixed(value, precision.length, roundingFunction);\n                }\n\n                w = d.split('.')[0];\n\n                if (d.split('.')[1].length) {\n                    d = languages[currentLanguage].delimiters.decimal + d.split('.')[1];\n                } else {\n                    d = '';\n                }\n\n                if (optDec && Number(d.slice(1)) === 0) {\n                    d = '';\n                }\n            } else {\n                w = toFixed(value, null, roundingFunction);\n            }\n\n            // format number\n            if (w.indexOf('-') > -1) {\n                w = w.slice(1);\n                neg = true;\n            }\n\n            if (thousands > -1) {\n                w = w.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + languages[currentLanguage].delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                w = '';\n            }\n\n            return ((negP && neg) ? '(' : '') + ((!negP && neg) ? '-' : '') + ((!neg && signed) ? '+' : '') + w + d + ((ord) ? ord : '') + ((abbr) ? abbr : '') + ((bytes) ? bytes : '') + ((negP && neg) ? ')' : '');\n        }\n    }\n\n    /************************************\n        Top Level Functions\n    ************************************/\n\n    numeral = function (input) {\n        if (numeral.isNumeral(input)) {\n            input = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            input = 0;\n        } else if (!Number(input)) {\n            input = numeral.fn.unformat(input);\n        }\n\n        return new Numeral(Number(input));\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function (obj) {\n        return obj instanceof Numeral;\n    };\n\n    // This function will load languages and then set the global language.  If\n    // no arguments are passed in, it will simply return the current global\n    // language key.\n    numeral.language = function (key, values) {\n        if (!key) {\n            return currentLanguage;\n        }\n\n        if (key && !values) {\n            if(!languages[key]) {\n                throw new Error('Unknown language : ' + key);\n            }\n            currentLanguage = key;\n        }\n\n        if (values || !languages[key]) {\n            loadLanguage(key, values);\n        }\n\n        return numeral;\n    };\n    \n    // This function provides access to the loaded language data.  If\n    // no arguments are passed in, it will simply return the current\n    // global language object.\n    numeral.languageData = function (key) {\n        if (!key) {\n            return languages[currentLanguage];\n        }\n        \n        if (!languages[key]) {\n            throw new Error('Unknown language : ' + key);\n        }\n        \n        return languages[key];\n    };\n\n    numeral.language('en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function (number) {\n            var b = number % 10;\n            return (~~ (number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    numeral.zeroFormat = function (format) {\n        zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function (format) {\n        defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    /************************************\n        Helpers\n    ************************************/\n\n    function loadLanguage(key, values) {\n        languages[key] = values;\n    }\n\n    /************************************\n        Floating-point helpers\n    ************************************/\n\n    // The floating-point helper functions and implementation\n    // borrows heavily from sinful.js: http://guipn.github.io/sinful.js/\n\n    /**\n     * Array.prototype.reduce for browsers that don't support it\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce#Compatibility\n     */\n    if ('function' !== typeof Array.prototype.reduce) {\n        Array.prototype.reduce = function (callback, opt_initialValue) {\n            'use strict';\n            \n            if (null === this || 'undefined' === typeof this) {\n                // At the moment all modern browsers, that support strict mode, have\n                // native implementation of Array.prototype.reduce. For instance, IE8\n                // does not support strict mode, so this check is actually useless.\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n            \n            if ('function' !== typeof callback) {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var index,\n                value,\n                length = this.length >>> 0,\n                isValueSet = false;\n\n            if (1 < arguments.length) {\n                value = opt_initialValue;\n                isValueSet = true;\n            }\n\n            for (index = 0; length > index; ++index) {\n                if (this.hasOwnProperty(index)) {\n                    if (isValueSet) {\n                        value = callback(value, this[index], index, this);\n                    } else {\n                        value = this[index];\n                        isValueSet = true;\n                    }\n                }\n            }\n\n            if (!isValueSet) {\n                throw new TypeError('Reduce of empty array with no initial value');\n            }\n\n            return value;\n        };\n    }\n\n    \n    /**\n     * Computes the multiplier necessary to make x >= 1,\n     * effectively eliminating miscalculations caused by\n     * finite precision.\n     */\n    function multiplier(x) {\n        var parts = x.toString().split('.');\n        if (parts.length < 2) {\n            return 1;\n        }\n        return Math.pow(10, parts[1].length);\n    }\n\n    /**\n     * Given a variable number of arguments, returns the maximum\n     * multiplier that must be used to normalize an operation involving\n     * all of them.\n     */\n    function correctionFactor() {\n        var args = Array.prototype.slice.call(arguments);\n        return args.reduce(function (prev, next) {\n            var mp = multiplier(prev),\n                mn = multiplier(next);\n        return mp > mn ? mp : mn;\n        }, -Infinity);\n    }        \n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n\n    numeral.fn = Numeral.prototype = {\n\n        clone : function () {\n            return numeral(this);\n        },\n\n        format : function (inputString, roundingFunction) {\n            return formatNumeral(this, \n                  inputString ? inputString : defaultFormat, \n                  (roundingFunction !== undefined) ? roundingFunction : Math.round\n              );\n        },\n\n        unformat : function (inputString) {\n            if (Object.prototype.toString.call(inputString) === '[object Number]') { \n                return inputString; \n            }\n            return unformatNumeral(this, inputString ? inputString : defaultFormat);\n        },\n\n        value : function () {\n            return this._value;\n        },\n\n        valueOf : function () {\n            return this._value;\n        },\n\n        set : function (value) {\n            this._value = Number(value);\n            return this;\n        },\n\n        add : function (value) {\n            var corrFactor = correctionFactor.call(null, this._value, value);\n            function cback(accum, curr, currI, O) {\n                return accum + corrFactor * curr;\n            }\n            this._value = [this._value, value].reduce(cback, 0) / corrFactor;\n            return this;\n        },\n\n        subtract : function (value) {\n            var corrFactor = correctionFactor.call(null, this._value, value);\n            function cback(accum, curr, currI, O) {\n                return accum - corrFactor * curr;\n            }\n            this._value = [value].reduce(cback, this._value * corrFactor) / corrFactor;            \n            return this;\n        },\n\n        multiply : function (value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = correctionFactor(accum, curr);\n                return (accum * corrFactor) * (curr * corrFactor) /\n                    (corrFactor * corrFactor);\n            }\n            this._value = [this._value, value].reduce(cback, 1);\n            return this;\n        },\n\n        divide : function (value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = correctionFactor(accum, curr);\n                return (accum * corrFactor) / (curr * corrFactor);\n            }\n            this._value = [this._value, value].reduce(cback);            \n            return this;\n        },\n\n        difference : function (value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n\n    };\n\n    /************************************\n        Exposing Numeral\n    ************************************/\n\n    // CommonJS module is defined\n    if (hasModule) {\n        module.exports = numeral;\n    }\n\n    /*global ender:false */\n    if (typeof ender === 'undefined') {\n        // here, `this` means `window` in the browser, or `global` on the server\n        // add `numeral` as a global object via a string identifier,\n        // for Closure Compiler 'advanced' mode\n        this['numeral'] = numeral;\n    }\n\n    /*global define:false */\n    if (typeof define === 'function' && define.amd) {\n        define([], function () {\n            return numeral;\n        });\n    }\n}).call(this);\n","export default function getBaseUrl() {\r\n  return getQueryStringParameterByName(\"useMockApi\")\r\n    ? \"http://localhost:3001/\"\r\n    : \"/\";\r\n}\r\n\r\nfunction getQueryStringParameterByName(name, url) {\r\n  if (!url) url = window.location.href;\r\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n    results = regex.exec(url);\r\n  if (!results) return null;\r\n  if (!results[2]) return \"\";\r\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n}\r\n","import getBaseUrl from './baseUrl';\r\n\r\nconst baseUrl = getBaseUrl();\r\nexport function getUsers(){\r\n    return get('users');\r\n}\r\nexport function deleteUser(id){\r\n  return del(`users/${id}`);\r\n}\r\n\r\nfunction get(url){\r\n    return fetch(buildUrl(url)).then(onSuccess, onError);\r\n}\r\n\r\nfunction buildUrl(url){\r\n  return `${baseUrl}${url}`;\r\n}\r\n\r\nfunction del(url) {\r\n  const request = new Request(buildUrl(url), {\r\n    method: 'DELETE'\r\n  });\r\n  return fetch(request).then(onSuccess, onError);\r\n}\r\n\r\nfunction onSuccess(response){\r\n    return response.json();\r\n}\r\n\r\nfunction onError(error){\r\n    console.log(error); //eslint-disable-line no-console\r\n}\r\n","import numeral from 'numeral';\r\nimport './index.css';\r\nimport { getUsers, deleteUser } from './api/usersApi';\r\nconst value = numeral(1000).format('$0,0.00');\r\nconsole.log(`Converted numeral value: ${value}`); //eslint-disable-line no-console\r\nconst convertUserToHtml = (user) => `<tr>\r\n                                       <td><a href=\"#\" data-id=${user.id} class=\"deleteUser\">Delete</a></td>\r\n                                       <td>${user.id}</td>\r\n                                       <td>${user.firstName}</td>\r\n                                       <td>${user.lastName}</td>\r\n                                       <td>${user.email}</td>\r\n                                     </tr>`\r\ngetUsers().then(users => {\r\n  document.querySelector('#users>tbody').innerHTML = users.map(convertUserToHtml).join('');\r\n  const tbody = document.querySelector('#users>tbody');\r\n  document.querySelectorAll('.deleteUser').forEach(link => link.addEventListener('click', function () {\r\n    const id = this.attributes['data-id'].value;\r\n    deleteUser(id).then(() => {\r\n      tbody.removeChild(this.parentNode.parentNode);\r\n    })\r\n  }));\r\n});\r\n"],"sourceRoot":""}